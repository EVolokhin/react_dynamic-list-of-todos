{"version":3,"sources":["components/TodoList/todosSearch.jsx","components/TodoList/todo.jsx","components/TodoList/select.jsx","components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodosSearch","searchValue","handleChange","type","value","name","placeholder","onChange","Todo","title","userId","userSelect","className","readOnly","onClick","Select","select","defaultProps","TodoList","todos","map","todo","toLowerCase","includes","key","id","request","url","fetch","then","result","ok","Error","status","statusText","json","data","CurrentUser","state","user","this","userGetData","prevProps","props","userProFile","setState","email","phone","clearOnClick","React","Component","App","selectedUserId","todoOnClick","event","target","selected","todosList","filter","completed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd72cda0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function TodosSearch({ searchValue, handleChange }) {\n  return (\n    <input\n      type=\"text\"\n      value={searchValue}\n      name=\"searchValue\"\n      placeholder=\"Search...\"\n      onChange={handleChange}\n    />\n  );\n}\n\nTodosSearch.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Todo({\n  title,\n  userId,\n  userSelect,\n}) {\n  return (\n    <li className=\"TodoList__item TodoList__item--unchecked\">\n      <label>\n        <input type=\"checkbox\" readOnly />\n        <p>{title}</p>\n      </label>\n\n      <button\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        type=\"button\"\n        onClick={() => userSelect(userId)}\n      >\n        User&nbsp;#\n        {userId}\n      </button>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number,\n  userSelect: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  userId: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Select({ handleChange, select }) {\n  return (\n    <select\n      value={select}\n      name=\"select\"\n      onChange={handleChange}\n    >\n      <option>\n        All\n      </option>\n      <option>\n        Active\n      </option>\n      <option>\n        Completed\n      </option>\n    </select>\n  );\n}\n\nSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  select: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport { TodosSearch } from './todosSearch';\nimport { Todo } from './todo';\nimport { Select } from './select';\n\nexport const TodoList = ({\n  todos,\n  userSelect,\n  searchValue,\n  handleChange,\n  select,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <TodosSearch\n        searchValue={searchValue}\n        handleChange={handleChange}\n      />\n      <Select\n        handleChange={handleChange}\n        select={select}\n      />\n      <ul className=\"TodoList__list\">\n        { todos.map((todo) => {\n          const visible = (\n            todo.title.toLowerCase()\n              .includes(searchValue.toLowerCase()));\n\n          return (\n            visible && (\n              <Todo\n                key={todo.id}\n                title={todo.title}\n                userId={todo.userId}\n                userSelect={userSelect}\n              />\n            )\n          );\n        })}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  userSelect: PropTypes.func.isRequired,\n  searchValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  select: PropTypes.string.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => (\n  fetch(`${BASE_URL}${url}`)\n    .then((result) => {\n      if (!result.ok) {\n        throw new Error(`${result.status} - ${result.statusText}`);\n      }\n\n      return result.json();\n    })\n    .then(result => result.data)\n);\n\nexport function getTodos() {\n  return request('/todos');\n}\n\nexport function getUser(userId) {\n  return request(`/users/${userId}`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../api';\n\nexport class CurrentUser extends React.Component {\nstate = {\n  user: {},\n}\n\ncomponentDidMount() {\n  this.userGetData();\n}\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.userId !== this.props.userId) {\n    this.userGetData();\n  }\n}\n\nasync userGetData() {\n  const userProFile = await getUser(this.props.userId);\n\n  this.setState({\n    user: userProFile,\n  });\n}\n\nrender() {\n  const {\n    id,\n    name,\n    email,\n    phone,\n\n  } = this.state.user;\n\n  return (\n    <div className=\"CurrentUser\">\n      <button\n        type=\"button\"\n        onClick={() => this.props.clearOnClick()}\n      >\n        CLEAR\n      </button>\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {id}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{name}</h3>\n      <p className=\"CurrentUser__email\">{email}</p>\n      <p className=\"CurrentUser__phone\">{phone}</p>\n    </div>\n  );\n}\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearOnClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    searchValue: '',\n    select: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((result) => {\n        this.setState({\n          todos: result.filter(todo => todo.title),\n        });\n      });\n  }\n\n  todoOnClick = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearOnClick = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  handleChange =(event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  selected = (todosList) => {\n    switch (this.state.select) {\n      case 'Active':\n        return todosList.filter(todo => !todo.completed);\n      case 'Completed':\n        return todosList.filter(todo => todo.completed);\n      default:\n        return todosList;\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      searchValue,\n      select,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={this.selected(todos)}\n            userSelect={this.todoOnClick}\n            searchValue={searchValue}\n            handleChange={this.handleChange}\n            select={select}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearOnClick={this.clearOnClick}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}